<?php
declare(strict_types=1);

namespace email;

use jsys\types\email\Subject;
use PHPUnit\Framework\TestCase;

/**
 * @property  expectExceptionCode
 */
class SubjectTest extends TestCase
{
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function test_must_not_initialize_with_email_subject_greater_then_998()
    {
        $max = Subject::MAX_LENGTH;
        $actual = str_repeat("a", 999);
        $this->expectExceptionCode(1004);
        $this->expectExceptionMessage('Given string should not be greater then 998');
        $emailSubject = new Subject($actual);
    }

    public function test_must_not_initialize_with_email_subject_each_line_greater_than_998_characters()
    {
        $newSubject = str_repeat("a", 500);
        $actual = str_repeat("a", 999);
        echo <<<EOT
        $newSubject
        $actual
       EOT;
        Subject::MAX_LENGTH;
        $this->expectExceptionCode(1004);
        $this->expectExceptionMessage('Given string should not be greater then 998');
        $emailSubject = new Subject($actual);
        $newSubject1 = new Subject($newSubject);
        $this->assertInstanceOf('jsys\types\email\Subject', $emailSubject);
        $this->assertEquals('jsys\types\email\Subject', get_class($emailSubject));
        $this->assertEquals($emailSubject->getSubject(), $newSubject1, 'Both must get the same value');
    }

    public function test_can_initialize_with_valid_subject_characters()
    {
        $actual = str_repeat("a", 78);
        $emailSubject = new Subject($actual);
        $this->assertInstanceOf('jsys\types\email\Subject', $emailSubject);
        $this->assertEquals('jsys\types\email\Subject', get_class($emailSubject));
        $this->assertEquals($emailSubject->getSubject(), $actual, 'Both must get the same value');
    }

    public function test_must_initialize_with_email_subject_each_line_greater_than_998_characters()
    {
        $actual = str_repeat("a", 990);
        echo <<<EOT
        $actual
        $actual
       EOT;
        $emailSubject = new Subject($actual);
        $this->assertInstanceOf('jsys\types\email\Subject', $emailSubject);
        $this->assertEquals('jsys\types\email\Subject', get_class($emailSubject));
        $this->assertEquals($emailSubject->getSubject(), $actual, 'Both must get the same value');

    }

    public function tearDown(): void
    {
    }
}